service: bias-ui-web

frameworkVersion: "3"

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

plugins:
  - serverless-single-page-app-plugin
  - serverless-cloudfront-invalidate

custom:
  singlePageAppPlugin:
    indexPath: dist/index.html
    notFoundPath: dist/index.html
    stripQueryString: true
    stripTrailingSlash: true

  cloudfrontInvalidate:
    distributionIdKey: CloudFrontDistributionId
    items:
      - "/*"

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-${self:provider.region}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    S3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: s3:GetObject
              Resource: !Sub "${S3Bucket}/*"

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - Id: S3Origin
              DomainName: !GetAtt S3Bucket.RegionalDomainName
              S3OriginConfig:
                OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
          Enabled: true
          DefaultCacheBehavior:
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3Origin
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /index.html
          PriceClass: PriceClass_100
          ViewerCertificate:
            CloudFrontDefaultCertificate: true

    CloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: !Sub "OAI for ${self:service}-${self:provider.stage}"

  Outputs:
    CloudFrontDistributionId:
      Description: CloudFront Distribution ID
      Value: !Ref CloudFrontDistribution
      Export:
        Name: !Sub "${self:service}-${self:provider.stage}-CloudFrontDistributionId"

    CloudFrontDomainName:
      Description: CloudFront Domain Name
      Value: !GetAtt CloudFrontDistribution.DomainName
      Export:
        Name: !Sub "${self:service}-${self:provider.stage}-CloudFrontDomainName"

    S3BucketName:
      Description: S3 Bucket Name
      Value: !Ref S3Bucket
      Export:
        Name: !Sub "${self:service}-${self:provider.stage}-S3BucketName"

package:
  patterns:
    - "!node_modules/**"
    - "!src/**"
    - "!*.ts"
    - "!*.tsx"
    - "!vite.config.ts"
    - "!tsconfig*.json"
    - "!package.json"
    - "!package-lock.json"
    - "!pnpm-lock.yaml"
    - "!.git/**"
    - "!.gitignore"
    - "!README.md"
    - "!dist/**"
    - "handler.js"
